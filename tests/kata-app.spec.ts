import { test, expect } from "@playwright/test";

test.describe("Kata App", () => {
  test.afterEach(async ({ request }) => {
    // –û—á–∏—â–∞–µ–º –ë–î –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞
    const response = await request.get("/api/katas");
    const katas = await response.json();

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–∞—Ç—ã
    for (const kata of katas) {
      if (kata.title.startsWith("Test Kata ")) {
        await request.delete(`/api/katas/${kata.id}`);
      }
    }
  });

  test("should load the homepage", async ({ page }) => {
    await page.goto("/");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    await expect(
      page.getByRole("heading", { name: "ü•ã –ú–æ–∏ –ö–∞—Ç—ã" })
    ).toBeVisible();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    await expect(page.getByText("–í—Å–µ–≥–æ")).toBeVisible();
    await expect(page.getByText("–†–µ—à–µ–Ω–æ")).toBeVisible();
    await expect(page.getByText("–í –ø—Ä–æ—Ü–µ—Å—Å–µ")).toBeVisible();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç—ã
    await expect(page.getByText("+ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç—É")).toBeVisible();
  });

  test("should add a new kata", async ({ page }) => {
    await page.goto("/");

    // –ö–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç—ã
    await page.getByText("+ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç—É").click();

    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
    const timestamp = Date.now();
    const kataTitle = `Test Kata ${timestamp}`;

    await page.getByLabel("–ù–∞–∑–≤–∞–Ω–∏–µ *").fill(kataTitle);
    await page
      .getByLabel("–°—Å—ã–ª–∫–∞ –Ω–∞ Codewars *")
      .fill("https://www.codewars.com/kata/test");
    await page.getByLabel("–°–ª–æ–∂–Ω–æ—Å—Ç—å").selectOption("8kyu");
    await page.getByLabel("–ó–∞–º–µ—Ç–∫–∏").fill("This is a test kata");

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
    await page.getByRole("button", { name: "–î–æ–±–∞–≤–∏—Ç—å" }).click();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–∞—Ç–∞ –¥–æ–±–∞–≤–∏–ª–∞—Å—å
    await expect(page.getByRole("heading", { name: kataTitle })).toBeVisible();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–æ—Ä–º–∞ –∑–∞–∫—Ä—ã–ª–∞—Å—å (–∑–Ω–∞—á–∏—Ç –∫–∞—Ç–∞ –¥–æ–±–∞–≤–∏–ª–∞—Å—å)
    await expect(page.getByText("+ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç—É")).toBeVisible();
  });

  test("should toggle kata completion", async ({ page }) => {
    await page.goto("/");

    // –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—ã–π —á–µ–∫–±–æ–∫—Å
    const checkbox = page.locator('input[type="checkbox"]').first();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —á–µ–∫–±–æ–∫—Å –≤–∏–¥–∏–º
    await expect(checkbox).toBeVisible();

    // –ö–ª–∏–∫–∞–µ–º –Ω–∞ —á–µ–∫–±–æ–∫—Å
    await checkbox.click();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–∞—Ç–∞ –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è
    await expect(checkbox).toBeChecked();
  });

  test("should filter katas", async ({ page }) => {
    await page.goto("/");

    // –ö–ª–∏–∫–∞–µ–º –Ω–∞ —Ñ–∏–ª—å—Ç—Ä "–ê–∫—Ç–∏–≤–Ω—ã–µ"
    await page.getByRole("button", { name: /–ê–∫—Ç–∏–≤–Ω—ã–µ/ }).click();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ç—ã
    const checkboxes = page.locator('input[type="checkbox"]');
    const count = await checkboxes.count();

    for (let i = 0; i < count; i++) {
      await expect(checkboxes.nth(i)).not.toBeChecked();
    }
  });

  test("should validate form fields", async ({ page }) => {
    await page.goto("/");

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
    await page.getByText("+ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç—É").click();

    // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—É—Å—Ç—É—é —Ñ–æ—Ä–º—É
    await page.getByRole("button", { name: "–î–æ–±–∞–≤–∏—Ç—å" }).click();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ—è–≤–∏–ª–∏—Å—å –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    await expect(page.getByText("–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ")).toBeVisible();
    await expect(page.getByText("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞")).toBeVisible();
  });
});
